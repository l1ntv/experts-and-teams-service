GENERAL.FIRST_COLUMN_INDEX.SQL.CONST=1
GENERAL.SECOND_COLUMN_INDEX.SQL.CONST=2
GENERAL.THIRD_COLUMN_INDEX.SQL.CONST=3
GENERAL.FOURTH_COLUMN_INDEX.SQL.CONST=4
GENERAL.FIFTH_COLUMN_INDEX.SQL.CONST=5
GENERAL.EMPTY_RESULT_SET.SQL.CONST=0
AuthenticationDataDAO.NOT_FOUND_USER_ID.SQL.CONST=0
AuthenticationDataDAO.IS_BANNED_USER.SQL.QUERY=SELECT COUNT(*) FROM USER_DATA WHERE login = ? AND status_id = 2
AuthenticationDataDAO.EXISTS_BY_LOGIN_AND_PASSWORD.SQL.QUERY=SELECT COUNT(*) FROM USER_DATA WHERE login = ? AND password = ?
AuthenticationDataDAO.SET_ONLINE_STATUS_BY_USER_ID.SQL.QUERY=UPDATE USER_DATA SET status_id = ? WHERE user_id = ?
AuthenticationDataDAO.FIND_USER_ID_BY_LOGIN.SQL.QUERY=SELECT user_id FROM USER_DATA WHERE login = ?
AuthenticationDataDAO.FIND_USER_TYPE_GROUP_ID_BY_USER_ID.SQL.QUERY=SELECT type_id FROM USER_DATA WHERE user_id = ?
AuthenticationDataDAO.IS_USER_CAPTAIN_BY_USER_ID.SQL.QUERY=SELECT COUNT(*) FROM (USER_DATA INNER JOIN TEAMS ON USER_DATA.USER_ID = TEAMS.CAPTAIN_ID) WHERE user_id = ?
LogoutDataDAO.SET_OFFLINE_STATUS_BY_USER_ID.SQL.QUERY=UPDATE USER_DATA SET status_id = ? WHERE user_id = ?
RegistrationDataDAO.EXISTS_BY_LOGIN_AND_PASSWORD.SQL.QUERY=SELECT COUNT(*) FROM USER_DATA WHERE login = ? AND password = ?
RegistrationDataDAO.CREATE_USER_BY_LOGIN_AND_PASSWORD.SQL.QUERY=INSERT INTO USER_DATA (login, password, team_id, status_id, type_id) VALUES (?, ?, ?, ?, ?)
RegistrationDataDAO.FIND_USER_ID_BY_LOGIN.SQL.QUERY=SELECT user_id FROM USER_DATA WHERE login = ?
RegistrationDataDAO.EMPTY_TEAM_ID.SQL.CONST=-1
RegistrationDataDAO.NOT_FOUND_USER_ID.SQL.CONST=0
MainDataDAO.GET_LIST_TEAM=SELECT * FROM TEAMS
MainDataDAO.IS_USER_JOINED_IN_TEAM_BY_ID.SQL.QUERY=SELECT COUNT(*) FROM TEAM_MEMBERS WHERE user_id = ?
MainDataDAO.FIND_TEAM_ID_BY_USER_ID.SQL.QUERY=SELECT TEAM_MEMBERS.TEAM_ID FROM TEAM_MEMBERS WHERE user_id = ?
MainDataDAO.FIND_TEAM_NAME_BY_TEAM_ID.SQL.QUERY=SELECT TEAMS.NAME FROM TEAMS WHERE team_id = ?
MainDataDAO.FIND_CAPTAIN_LOGIN_BY_CAPTAIN_ID=SELECT USER_DATA.LOGIN FROM (USER_DATA INNER JOIN TEAMS ON USER_DATA.USER_ID = TEAMS.CAPTAIN_ID) WHERE TEAMS.CAPTAIN_ID = ?
MainDataDAO.FIND_EXPERT_LOGIN_BY_TEAM_ID=SELECT USER_DATA.LOGIN FROM (USER_DATA INNER JOIN CONSULTATIONS ON USER_DATA.USER_ID = CONSULTATIONS.EXPERT_ID) WHERE CONSULTATIONS.TEAM_ID = ?
MainDataDAO.FIND_LIST_CONSULTING_TEAMS_DTO_BY_EXPERT_ID.SQL.QUERY=select teams.team_id, teams.name, user_data.login, teams.count_members, teams.max_count_members from consultations inner join (user_data inner join teams on user_data.user_id = teams.captain_id) on consultations.team_id = teams.team_id WHERE expert_id = ?
AdministratorDataDAO.GET_AUTH_USERS_LIST=SELECT USER_DATA.LOGIN, ROLES.ROLE_NAME FROM USER_DATA INNER JOIN ROLES ON user_data.type_id = roles.role_id WHERE user_data.status_id = 1
AdministratorDataDAO.GET_TEAMS_STATISTICS_LIST=SELECT TEAMS.NAME, USER_DATA.LOGIN, TEAMS.COUNT_MEMBERS, TEAMS.MAX_COUNT_MEMBERS FROM USER_DATA INNER JOIN TEAMS ON USER_DATA.USER_ID = TEAMS.CAPTAIN_ID
AdministratorDataDAO.GET_EXPERTS_STATISTICS_LIST=SELECT USER_DATA.LOGIN, EXPERTS.COUNT_TEAMS, EXPERTS.MAX_COUNT_TEAMS FROM USER_DATA INNER JOIN EXPERTS ON USER_DATA.USER_ID = EXPERTS.USER_ID
AdministratorDataDAO.CREATE_USER_BY_LOGIN.SQL.QUERY=INSERT INTO USER_DATA (login, password, team_id, status_id, type_id) VALUES (?, ?, ?, ?, ?)
AdministratorDataDAO.EMPTY_TEAM_ID.SQL.CONST=-1
AdministratorDataDAO.ORIGINAL_PASSWORD.SQL.CONST=1
AdministratorDataDAO.FIND_CONSULTATION_ID_BY_EXPERT_ID.SQL.QUERY=select consultation_id from consultations where expert_id = ?
AdministratorDataDAO.FIND_CONSULTATION_ID_BY_TEAM_ID.SQL.QUERY=select consultation_id from consultations where team_id = ?
AdministratorDataDAO.IS_USER_EXISTS_BY_LOGIN.SQL.QUERY=SELECT COUNT(*) FROM USER_DATA WHERE login = ?
AdministratorDataDAO.SEARCH_USER_ROLE_BY_LOGIN.SQL.QUERY=SELECT ROLES.ROLE_NAME FROM USER_DATA INNER JOIN ROLES ON USER_DATA.TYPE_ID = ROLES.ROLE_ID WHERE USER_DATA.LOGIN = ?
AdministratorDataDAO.IS_USER_JOINED_IN_TEAM_BY_ID.SQL.QUERY=SELECT COUNT(*) FROM TEAM_MEMBERS WHERE user_id = ?
AdministratorDataDAO.DELETE_USER_FROM_USER_DATA_TABLE_BY_LOGIN.SQL.QUERY=DELETE FROM USER_DATA WHERE login = ?
AdministratorDataDAO.DELETE_EXPERT_FROM_EXPERTS_TABLE_BY_EXPERT_ID.SQL.QUERY=DELETE FROM EXPERTS WHERE user_id = ?
AdministratorDataDAO.DELETE_EXPERT_FROM_CONSULTATIONS_TABLE_BY_EXPERT_ID.SQL.QUERY=DELETE FROM CONSULTATIONS WHERE expert_id = ?
AdministratorDataDAO.DELETE_EXPERT_FROM_CONSULTATIONS_TABLE_BY_TEAM_ID.SQL.QUERY=DELETE FROM CONSULTATIONS WHERE team_id = ?
AdministratorDataDAO.DELETE_TEAM_FOR_OTHER_MEMBERS.SQL.QUERY=DELETE FROM TEAM_MEMBERS WHERE TEAM_ID = ?
AdministratorDataDAO.CREATE_EXPERT_BY_ID.SQL.QUERY=INSERT INTO EXPERTS (user_id, count_teams, max_count_teams) VALUES (?, 0, 4)
AdministratorDataDAO.DELETE_FROM_QUESTION_ANSWER_BY_CONSULTATION_ID.SQL.QUERY=DELETE FROM QUESTION_ANSWER WHERE CONSULTATION_ID = ?
AdministratorDataDAO.DELETE_FROM_CONSULTATION_REQUESTS_BY_EXPERT_ID.SQL.QUERY=DELETE FROM CONSULTATIONS_REQUEST WHERE EXPERT_ID = ?
AdministratorDataDAO.DELETE_FROM_CONSULTATION_REQUESTS_BY_TEAM_ID.SQL.QUERY=DELETE FROM CONSULTATIONS_REQUEST WHERE team_id = ?
AdministratorDataDAO.DELETE_TEAM_FROM_TEAMS_TABLE_BY_TEAM_ID.SQL.QUERY=DELETE FROM TEAMS WHERE TEAM_ID = ?
AdministratorDataDAO.FIND_EXPERT_ID_BY_TEAM_ID.SQL.QUERY=SELECT EXPERT_ID FROM CONSULTATIONS WHERE TEAM_ID = ?
AdministratorDataDAO.DECREASE_COUNT_TEAMS_FOR_EXPERT.SQL.QUERY=UPDATE EXPERTS SET COUNT_TEAMS = (COUNT_TEAMS - 1) WHERE USER_ID = ?
AdministratorDataDAO.FIND_TEAM_ID_BY_CAPTAIN_ID.SQL.QUERY=SELECT TEAM_ID FROM TEAMS WHERE CAPTAIN_ID = ?
AdministratorDataDAO.FIND_USER_ID_BY_LOGIN.SQL.QUERY=SELECT USER_DATA.USER_ID FROM USER_DATA WHERE login = ?
AdministratorDataDAO.IS_USER_CAPTAIN_IN_TEAM_BY_ID.SQL.QUERY=SELECT COUNT(*) FROM TEAMS WHERE captain_id = ?
AdministratorDataDAO.DELETE_USER_FROM_TEAM_MEMBERS_TABLE_BY_ID.SQL.QUERY=DELETE FROM TEAM_MEMBERS WHERE user_id = ?
MyTeamDataDAO.FIND_COUNT_MEMBERS_BY_TEAM_ID.SQL.QUERY=SELECT TEAMS.COUNT_MEMBERS FROM TEAMS WHERE team_id = ?
MyTeamDataDAO.FIND_MAX_COUNT_MEMBERS_BY_TEAM_ID.SQL.QUERY=SELECT TEAMS.MAX_COUNT_MEMBERS FROM TEAMS WHERE team_id = ?
MyTeamDataDAO.GET_TEAM_MEMBER_DTO_LIST_BY_TEAM_ID.SQL.QUERY=SELECT USER_DATA.login, USER_DATA.status_id, team_members.team_role_id FROM USER_DATA INNER JOIN TEAM_MEMBERS ON user_data.user_id = team_members.user_id WHERE team_members.team_id = ?
CreateTeamDataDAO.CREATE_TEAM_IN_TEAMS_TABLE_BY_USER_ID_AND_TEAM_NAME.SQL.QUERY=INSERT INTO TEAMS (name, captain_id, count_members, max_count_members) VALUES (?, ?, ?, ?)
CreateTeamDataDAO.CREATE_TEAM_IN_TEAM_MEMBERS_TABLE_BY_USER_ID_AND_TEAM_ID.SQL.QUERY=INSERT INTO TEAM_MEMBERS (user_id, team_id, team_role_id) VALUES (?, ?, ?)
CreateTeamDataDAO.FIND_TEAM_ID_BY_TEAM_NAME.SQL.QUERY=SELECT TEAMS.TEAM_ID FROM TEAMS WHERE name = ?
CreateTeamDataDAO.IS_TEAM_EXISTS_BY_NAME.SQL.QUERY=SELECT COUNT(*) FROM TEAMS WHERE name = ?
CreateTeamDataDAO.UPDATE_TEAM_ID_FROM_USER_DATA.SQL.QUERY=UPDATE USER_DATA SET TEAM_ID = ? WHERE user_id = ?
LeaveTeamDataDAO.IS_USER_CAPTAIN_BY_USER_ID.SQL.QUERY=SELECT COUNT(*) FROM TEAMS WHERE captain_id = ?
LeaveTeamDataDAO.DELETE_USER_FROM_TEAM_MEMBERS_TABLE_BY_USER_ID.SQL.QUERY=DELETE FROM TEAM_MEMBERS WHERE user_id = ?
LeaveTeamDataDAO.FIND_TEAM_ID_BY_USER_ID.SQL.QUERY=SELECT TEAM_MEMBERS.TEAM_ID FROM TEAM_MEMBERS WHERE user_id = ?
LeaveTeamDataDAO.DECREASE_COUNT_MEMBERS_FROM_TEAMS_TABLE_BY_TEAM_ID.SQL.QUERY=UPDATE TEAMS SET COUNT_MEMBERS = (COUNT_MEMBERS - 1) WHERE team_id = ?
LeaveTeamDataDAO.UPDATE_TEAM_ID_FROM_USER_DATA_TABLE_BY_USER_ID.SQL.QUERY=UPDATE USER_DATA SET TEAM_ID = -1 WHERE user_id = ?
JoinTeamDataDAO.FIND_TEAM_ID_BY_TEAM_NAME.SQL.QUERY=SELECT TEAMS.TEAM_ID FROM TEAMS WHERE name = ?
JoinTeamDataDAO.IS_USER_JOINED_IN_TEAM_BY_USER_ID.SQL.QUERY=SELECT COUNT(*) FROM TEAM_MEMBERS WHERE user_id = ?
JoinTeamDataDAO.CHANGE_TEAM_ID_IN_USER_DATA_TABLE_TEAM_BY_USER_ID.SQL.QUERY=UPDATE USER_DATA SET TEAM_ID = ? WHERE user_id = ?
JoinTeamDataDAO.ADD_NEW_MEMBER_IN_TEAM_MEMBERS_TABLE.SQL.QUERY=INSERT INTO TEAM_MEMBERS (user_id, team_id, team_role_id) VALUES (?, ?, ?)
JoinTeamDataDAO.UPDATE_COUNT_MEMBERS_IN_TEAMS_TABLE_BY_TEAM_ID.SQL.QUERY=UPDATE TEAMS SET COUNT_MEMBERS = (COUNT_MEMBERS + 1) WHERE team_id = ?
ConsultationsDataDAO.IS_USER_JOINED_IN_TEAM_BY_ID.SQL.QUERY=SELECT COUNT(*) FROM TEAM_MEMBERS WHERE user_id = ?
ConsultationsDataDAO.IS_USER_CAPTAIN_BY_USER_ID.SQL.QUERY=SELECT COUNT(*) FROM TEAMS WHERE captain_id = ?
ConsultationsDataDAO.FIND_TEAM_ID_BY_USER_ID.SQL.QUERY=SELECT TEAM_ID FROM TEAM_MEMBERS WHERE user_id = ?
ConsultationsDataDAO.IS_TEAM_HAS_EXPERT_BY_TEAM_ID.SQL.QUERY=SELECT COUNT(*) FROM CONSULTATIONS WHERE team_id = ?
ConsultationsDataDAO.FIND_TEAM_EXPERT_BY_TEAM_ID.SQL.QUERY=SELECT USER_DATA.login, EXPERTS.count_teams, EXPERTS.max_count_teams FROM Consultations JOIN User_data ON Consultations.expert_id = User_data.user_id JOIN Experts ON Consultations.expert_id = Experts.user_id WHERE Consultations.team_id = ?
ConsultationsDataDAO.FIND_LIST_AVAILABLE_EXPERTS.SQL.QUERY=SELECT USER_DATA.LOGIN, EXPERTS.COUNT_TEAMS, EXPERTS.MAX_COUNT_TEAMS FROM USER_DATA INNER JOIN EXPERTS ON USER_DATA.USER_ID = EXPERTS.USER_ID WHERE COUNT_TEAMS < MAX_COUNT_TEAMS
RequestConsultationDataDAO.IS_TEAM_SENT_REQUEST_TO_EXPERT_BY_TEAM_ID_AND_EXPERT_ID.SQL.QUERY=SELECT COUNT(*) FROM CONSULTATIONS_REQUEST WHERE team_id = ? AND expert_id = ?
RequestConsultationDataDAO.FIND_EXPERT_ID_BY_LOGIN.SQL.QUERY=SELECT USER_DATA.user_id FROM USER_DATA where login = ?
RequestConsultationDataDAO.FIND_TEAM_ID_BY_USER_ID.SQL.QUERY=SELECT TEAM_MEMBERS.TEAM_ID FROM TEAM_MEMBERS WHERE user_id = ?
RequestConsultationDataDAO.CREATE_NEW_REQUEST_CONSULTATION.SQL.QUERY=INSERT INTO CONSULTATIONS_REQUEST (TEAM_ID, EXPERT_ID) VALUES (?, ?)
ConsultationsRequestsDataDAO.FIND_CONSULTATIONS_REQUESTS_FROM_TEAMS.SQL.QUERY=SELECT TEAMS.TEAM_ID, TEAMS.NAME, USER_DATA.LOGIN, TEAMS.COUNT_MEMBERS, TEAMS.MAX_COUNT_MEMBERS FROM CONSULTATIONS_REQUEST INNER JOIN (USER_DATA INNER JOIN TEAMS ON USER_DATA.USER_ID = TEAMS.CAPTAIN_ID) ON CONSULTATIONS_REQUEST.TEAM_ID = TEAMS.TEAM_ID WHERE CONSULTATIONS_REQUEST.EXPERT_ID = ?
ConsultationsRequestsDataDAO.FIND_COUNT_TEAMS_BY_EXPERT_ID.SQL.QUERY=SELECT EXPERTS.COUNT_TEAMS FROM EXPERTS WHERE USER_ID = ?
ConsultationsRequestsDataDAO.FIND_MAX_COUNT_TEAMS_BY_EXPERT_ID.SQL.QUERY=SELECT EXPERTS.MAX_COUNT_TEAMS FROM EXPERTS WHERE USER_ID = ?
ConsultationsDataDAO.FIND_QUESTIONS_AND_ANSWERS_BY_CONSULTATION_ID.SQL.QUERY=SELECT * FROM QUESTION_ANSWER where consultation_id = ?
AcceptTeamDataDAO.DELETE_REQUEST_BY_EXPERT_AND_TEAM_ID.SQL.QUERY=DELETE FROM CONSULTATIONS_REQUEST WHERE expert_id = ? AND team_id = ?
AcceptTeamDataDAO.CREATE_CONSULTATION_BY_EXPERT_AND_TEAM_ID.SQL.QUERY=INSERT INTO CONSULTATIONS (expert_id, team_id) VALUES (?, ?)
AcceptTeamDataDAO.INCREASE_COUNT_TEAMS_BY_EXPERT_ID.SQL.QUERY=UPDATE EXPERTS SET COUNT_TEAMS = (COUNT_TEAMS + 1) WHERE user_id = ?
CancelConsultationDataDAO.FIND_CONSULTATION_ID_BY_EXPERT_AND_TEAM_ID.SQL.QUERY=SELECT CONSULTATION_ID FROM CONSULTATIONS WHERE expert_id = ? AND team_id = ?
CancelConsultationDataDAO.DELETE_ANSWER_QUESTION_BY_CONSULTATION_ID.SQL.QUERY=DELETE FROM QUESTION_ANSWER WHERE consultation_id = ?
CancelConsultationDataDAO.DELETE_CONSULTATION_BY_EXPERT_AND_TEAM_ID.SQL.QUERY=DELETE FROM CONSULTATIONS WHERE expert_id = ? AND team_id = ?
CancelConsultationDataDAO.DECREASE_COUNT_TEAMS_BY_EXPERT_ID.SQL.QUERY=UPDATE EXPERTS SET COUNT_TEAMS = (COUNT_TEAMS - 1) WHERE user_id = ?
CancelConsultationDataDAO.FIND_TEAM_ID_BY_CAPTAIN_ID.SQL.QUERY=SELECT TEAMS.TEAM_ID FROM TEAMS WHERE captain_id = ?
CancelConsultationDataDAO.FIND_EXPERT_ID_BY_TEAM_ID.SQL.QUERY=SELECT CONSULTATIONS.EXPERT_ID FROM CONSULTATIONS WHERE team_id = ?
AskQuestionTeamDataDAO.FIND_CONSULTATION_ID_BY_TEAM_ID.SQL.QUERY=SELECT CONSULTATIONS.CONSULTATION_ID FROM CONSULTATIONS WHERE team_id = ?
AskQuestionTeamDataDAO.CREATE_QUESTION_BY_CONSULTATION_ID.SQL.QUERY=INSERT INTO QUESTION_ANSWER (CONSULTATION_ID, QUESTION, ANSWER) VALUES (?, ?, ' ')
AnswerToQuestionDataDAO.SET_ANSWER_TO_QUESTION.SQL.QUERY=UPDATE QUESTION_ANSWER SET ANSWER = ? WHERE QUESTION = ?
BannedUsersDataDAO.GET_BANNED_USERS_LIST.SQL.QUERY=SELECT USER_DATA.LOGIN, ROLES.ROLE_NAME FROM USER_DATA INNER JOIN ROLES ON user_data.type_id = roles.role_id WHERE user_data.status_id = 2
MessagesUsersDataDAO.FIND_CONSULTATION_MESSAGES_BY_EXPERTS.SQL.QUERY=SELECT USER_DATA.USER_ID, QUESTION_ANSWER.CONSULTATION_ID, USER_DATA.LOGIN, QUESTION_ANSWER.ANSWER FROM CONSULTATIONS INNER JOIN QUESTION_ANSWER ON CONSULTATIONS.CONSULTATION_ID = QUESTION_ANSWER.CONSULTATION_ID INNER JOIN  EXPERTS ON CONSULTATIONS.EXPERT_ID = EXPERTS.USER_ID INNER JOIN  USER_DATA ON EXPERTS.USER_ID = USER_DATA.USER_ID
MessagesUsersDataDAO.FIND_CONSULTATION_MESSAGES_BY_USERS.SQL.QUERY=SELECT USER_DATA.USER_ID, QUESTION_ANSWER.CONSULTATION_ID, USER_DATA.LOGIN, QUESTION_ANSWER.QUESTION FROM CONSULTATIONS INNER JOIN QUESTION_ANSWER ON CONSULTATIONS.CONSULTATION_ID = QUESTION_ANSWER.CONSULTATION_ID INNER JOIN TEAMS ON CONSULTATIONS.TEAM_ID = TEAMS.TEAM_ID INNER JOIN  USER_DATA ON TEAMS.CAPTAIN_ID = USER_DATA.USER_ID
MessagesUsersDataDAO.HIDE_QUESTION.SQL.QUERY=UPDATE QUESTION_ANSWER SET QUESTION = 'hidden by moderator' WHERE CONSULTATION_ID = ? AND TRIM(QUESTION) = TRIM(?)
MessagesUsersDataDAO.HIDE_ANSWER.SQL.QUERY=UPDATE QUESTION_ANSWER SET ANSWER = 'hidden by moderator' WHERE CONSULTATION_ID = ? AND TRIM(ANSWER) = TRIM(?)
BanUserDataDAO.BAN_USER_BY_LOGIN.SQL.QUERY=UPDATE USER_DATA SET status_id = 2 WHERE login = ?
BanUserDataDAO.UNBAN_USER_BY_LOGIN.SQL.QUERY=UPDATE USER_DATA SET status_id = 0 WHERE login = ?